name: Test and publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Get release version
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Set .csproj versions
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/**/*.csproj"
          version: ${{ steps.semantic.outputs.new_release_version }}

      - name: Restore dependencies
        run:  dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --configuration Release

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Pack and push to nuget.org
        run: |
          dotnet pack src/Darp.Results --configuration Release --artifacts-path build
          dotnet pack src/Darp.Results.Shouldly --configuration Release --artifacts-path build
          for pkg_name in ./build/package**/*.nupkg; do
            dotnet nuget push $pkg_name --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
          done

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
